# Generated by Copilot on 2025-09-18
from django.db import migrations, models


def backfill_city_fk(apps, schema_editor):
    City = apps.get_model("addressing", "City")
    Register = apps.get_model("flood_point_registering", "Flood_Point_Register")
    mapping = dict(City.objects.values_list("name", "id"))
    for r in Register.objects.all():
        try:
            label = dict(Register.City.choices).get(r.city)
        except Exception:
            label = None
        if label:
            cid = mapping.get(label)
            if cid and not r.city_ref_id:
                r.city_ref_id = cid
                r.save(update_fields=["city_ref"])


def forward(apps, schema_editor):
    backfill_city_fk(apps, schema_editor)


def reverse(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("addressing", "0010_city_and_links"),
        ("flood_point_registering", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="flood_point_register",
            name="city_ref",
            field=models.ForeignKey(
                null=True, blank=True, on_delete=models.SET_NULL, to="addressing.city"
            ),
        ),
        migrations.RunPython(forward, reverse),
    ]
